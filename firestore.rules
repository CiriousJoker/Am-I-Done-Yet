service cloud.firestore {
  match /databases/{database}/documents {
    match /todos/{todoId} {
      allow read: if loggedInAs(resourceField("uid"));
      allow delete: if loggedInAs(resourceField("uid"));
      allow update: if validTodoUpdateRequest();
      allow create: if validTodoCreateRequest(todoId);
    }
  }
  
  // ## VALIDATION FUNCTIONS ## //
  function validTodoCreateRequest(todoId) {
    return creationFieldsContainExactly([
      "id",
      "percent",
      "title",
      "uid"
    ])
    
    // Types
    && requestField("id") is string
    && requestField("percent") is number
    && requestField("title") is string
    && requestField("uid") is string
    
    // Validity
    && requestField("id") == todoId
    && requestField("percent") == 0.0
    && requestField("title").size() > 0
    && loggedInAs(requestField("uid"));
    
  }
  
  function validTodoUpdateRequest() {
    return writefieldsContainExactly([
      "percent"
    ])
    
    // Types
    && requestField("percent") is number
    
    // Validity
    && requestField("percent") >= 0
    && requestField("percent") <= 1
    && loggedInAs(resourceField("uid"));
  }
  
  // ## HELPER FUNCTIONS ## //
  
  // Update
  function writefieldsContainExactly(arrFields) {
    return hasAllWritefields(arrFields)
    && writeFieldsCanOnlyContain(arrFields);
  }
  
  function hasAllWritefields(arrFields) {
    return request.writeFields.size() >= arrFields.size()
    && request.writeFields.hasAll(arrFields);
  }

  function writeFieldsCanOnlyContain(arrFields) {
    return request.writeFields.size() <= arrFields.size()
    && request.writeFields.join("#").matches("((" + arrFields.join('|') + ")#?)*");
  }
  
  // Create
  function creationFieldsContainExactly(arrFields) {
    return hasAllCreationfields(arrFields)
    && creationFieldsCanOnlyContain(arrFields);
  }

  function hasAllCreationfields(arrFields) {
    return request.resource.data.size() >= arrFields.size()
    && request.resource.data.keys().hasAll(arrFields);
  }

  function creationFieldsCanOnlyContain(arrFields) {
    return request.resource.data.size() <= arrFields.size()
    && request.resource.data.keys().join("#").matches("((" + arrFields.join('|') + ")#?)*");
  }
  
  // Field getters
  function requestField(key) {
    return request.resource.data[key];
  }
  
  function resourceField(key) {
    return resource.data[key];
  }
    
    
  function loggedInAs(uid) {
    return request.auth.uid == uid;
  }
}